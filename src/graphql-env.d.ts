/* eslint-disable */
/* prettier-ignore */

/** An IntrospectionQuery representation of your schema.
 *
 * @remarks
 * This is an introspection of your schema saved as a file by GraphQLSP.
 * It will automatically be used by `gql.tada` to infer the types of your GraphQL documents.
 * If you need to reuse this data or update your `scalars`, update `tadaOutputLocation` to
 * instead save to a .ts instead of a .d.ts file.
 */
export type introspection = {
  name: never;
  query: 'Query';
  mutation: 'Mutation';
  subscription: never;
  types: {
    'Account': { kind: 'OBJECT'; name: 'Account'; fields: { 'email': { name: 'email'; type: { kind: 'SCALAR'; name: 'EmailAddress'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'identities': { name: 'identities'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AccountIdentity'; ofType: null; }; }; }; } }; 'permissions': { name: 'permissions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'GroupPermission'; ofType: null; }; }; }; } }; 'profiles': { name: 'profiles'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Player'; ofType: null; }; }; }; } }; }; };
    'AccountIdentity': { kind: 'OBJECT'; name: 'AccountIdentity'; fields: { 'accountId': { name: 'accountId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'organizationIdentityProvider': { name: 'organizationIdentityProvider'; type: { kind: 'OBJECT'; name: 'PublicOrganizationIdentityProvider'; ofType: null; } }; 'organizationIdentityProviderId': { name: 'organizationIdentityProviderId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'properties': { name: 'properties'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AccountIdentityProperty'; ofType: null; }; }; }; } }; 'providerId': { name: 'providerId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; }; };
    'AccountIdentityProperty': { kind: 'OBJECT'; name: 'AccountIdentityProperty'; fields: { 'property': { name: 'property'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'value': { name: 'value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'AggregationType': { name: 'AggregationType'; enumValues: 'AVG' | 'MAX' | 'MIN' | 'SUM'; };
    'AutomaticSeedingInput': { kind: 'INPUT_OBJECT'; name: 'AutomaticSeedingInput'; isOneOf: false; inputFields: [{ name: 'groupRepartitionMechanism'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'GroupRepartitionMechanism'; ofType: null; }; }; defaultValue: null }, { name: 'seedingMechanism'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'SeedingMechanism'; ofType: null; }; }; defaultValue: null }, { name: 'teams'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; }; defaultValue: null }]; };
    'Boolean': unknown;
    'BucketDuration': { name: 'BucketDuration'; enumValues: 'DAILY' | 'HOUR' | 'MINUTE' | 'MONTHLY' | 'YEARLY'; };
    'Condition': { kind: 'OBJECT'; name: 'Condition'; fields: { 'numericCondition': { name: 'numericCondition'; type: { kind: 'OBJECT'; name: 'NumericCondition'; ofType: null; } }; 'property': { name: 'property'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'propertyCondition': { name: 'propertyCondition'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'PropertyCondition'; ofType: null; }; } }; 'stringCondition': { name: 'stringCondition'; type: { kind: 'OBJECT'; name: 'StringCondition'; ofType: null; } }; }; };
    'ConditionInput': { kind: 'INPUT_OBJECT'; name: 'ConditionInput'; isOneOf: false; inputFields: [{ name: 'numericCondition'; type: { kind: 'INPUT_OBJECT'; name: 'NumberConditionInput'; ofType: null; }; defaultValue: null }, { name: 'property'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'propertyCondition'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'PropertyCondition'; ofType: null; }; }; defaultValue: null }, { name: 'stringCondition'; type: { kind: 'INPUT_OBJECT'; name: 'StringConditionInput'; ofType: null; }; defaultValue: null }]; };
    'Configuration': { kind: 'OBJECT'; name: 'Configuration'; fields: { 'configuration': { name: 'configuration'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'UNION'; name: 'ConfigurationProperties'; ofType: null; }; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'createdById': { name: 'createdById'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'description': { name: 'description'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'organizationId': { name: 'organizationId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; }; };
    'ConfigurationProperties': { kind: 'UNION'; name: 'ConfigurationProperties'; fields: {}; possibleTypes: 'StepConfiguration' | 'TournamentConfiguration'; };
    'ConfigurationType': { name: 'ConfigurationType'; enumValues: 'STEP' | 'TOURNAMENT'; };
    'CreateConfigurationInput': { kind: 'INPUT_OBJECT'; name: 'CreateConfigurationInput'; isOneOf: false; inputFields: [{ name: 'configuration'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'JSONObject'; ofType: null; }; }; defaultValue: null }, { name: 'description'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'CreateLeaderboardInput': { kind: 'INPUT_OBJECT'; name: 'CreateLeaderboardInput'; isOneOf: false; inputFields: [{ name: 'description'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'CreateLeaderboardSeasonBucketInput': { kind: 'INPUT_OBJECT'; name: 'CreateLeaderboardSeasonBucketInput'; isOneOf: false; inputFields: [{ name: 'minScore'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; }; defaultValue: null }, { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'scoreCalculationType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'LeaderboardScoreCalculationType'; ofType: null; }; }; defaultValue: null }]; };
    'CreateLeaderboardSeasonInput': { kind: 'INPUT_OBJECT'; name: 'CreateLeaderboardSeasonInput'; isOneOf: false; inputFields: [{ name: 'end'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; }; defaultValue: null }, { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'start'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; }; defaultValue: null }, { name: 'startingScore'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; }; defaultValue: null }]; };
    'CreateOrganizationAppInput': { kind: 'INPUT_OBJECT'; name: 'CreateOrganizationAppInput'; isOneOf: false; inputFields: [{ name: 'consentUrl'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'description'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'loginUrl'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'logoutRedirectUrls'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; }; defaultValue: null }, { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'public'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'redirectUrls'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; }; defaultValue: null }, { name: 'requiresConsent'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; }; defaultValue: null }, { name: 'secret'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'CreateOrganizationGroupInput': { kind: 'INPUT_OBJECT'; name: 'CreateOrganizationGroupInput'; isOneOf: false; inputFields: [{ name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'permissions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'GroupPermissionInput'; ofType: null; }; }; }; }; defaultValue: null }]; };
    'CreateOrganizationIdentityProvider': { kind: 'INPUT_OBJECT'; name: 'CreateOrganizationIdentityProvider'; isOneOf: false; inputFields: [{ name: 'allowLogin'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; }; defaultValue: null }, { name: 'description'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'icon'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'identityProviderId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'oauth2Configuration'; type: { kind: 'INPUT_OBJECT'; name: 'OAuthClientConfigurationInput'; ofType: null; }; defaultValue: null }, { name: 'openidConfiguration'; type: { kind: 'INPUT_OBJECT'; name: 'OpenidConfigurationInput'; ofType: null; }; defaultValue: null }]; };
    'CreateOrganizationInput': { kind: 'INPUT_OBJECT'; name: 'CreateOrganizationInput'; isOneOf: false; inputFields: [{ name: 'configuration'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'OrganizationConfigurationInput'; ofType: null; }; }; defaultValue: null }, { name: 'description'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'CreatePlatformInput': { kind: 'INPUT_OBJECT'; name: 'CreatePlatformInput'; isOneOf: false; inputFields: [{ name: 'configuration'; type: { kind: 'INPUT_OBJECT'; name: 'PlatformConfigurationInput'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'subdomain'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'CreatePlayerInput': { kind: 'INPUT_OBJECT'; name: 'CreatePlayerInput'; isOneOf: false; inputFields: [{ name: 'customFields'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'PlayerCustomFieldInput'; ofType: null; }; }; }; }; defaultValue: null }, { name: 'description'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'organizationCustomId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'ownerId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'profilePicUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'username'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'CreateTournamentInput': { kind: 'INPUT_OBJECT'; name: 'CreateTournamentInput'; isOneOf: false; inputFields: [{ name: 'configuration'; type: { kind: 'INPUT_OBJECT'; name: 'UpdateTournamentConfigurationOrImportFromIdInput'; ofType: null; }; defaultValue: null }, { name: 'description'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'endAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; defaultValue: null }, { name: 'endRegistrationsAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; defaultValue: null }, { name: 'startAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; defaultValue: null }, { name: 'startRegistrationsAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; defaultValue: null }, { name: 'title'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'visibleAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; defaultValue: null }]; };
    'CreateTournamentStepInput': { kind: 'INPUT_OBJECT'; name: 'CreateTournamentStepInput'; isOneOf: false; inputFields: [{ name: 'description'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'order'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; }; defaultValue: null }, { name: 'properties'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'PropertyValueInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'StepType'; ofType: null; }; }; defaultValue: null }]; };
    'CreateWebhookInput': { kind: 'INPUT_OBJECT'; name: 'CreateWebhookInput'; isOneOf: false; inputFields: [{ name: 'active'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; }; defaultValue: null }, { name: 'description'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'events'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'WebhookEventType'; ofType: null; }; }; }; }; defaultValue: null }, { name: 'url'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'CustomDomainData': { kind: 'OBJECT'; name: 'CustomDomainData'; fields: { 'hostname': { name: 'hostname'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'ownershipVerification': { name: 'ownershipVerification'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CustomDomainOwnershipVerification'; ofType: null; }; } }; 'ssl': { name: 'ssl'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CustomDomainSsl'; ofType: null; }; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CustomDomainStatus'; ofType: null; }; } }; 'verificationErrors': { name: 'verificationErrors'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; }; };
    'CustomDomainOwnershipVerification': { kind: 'OBJECT'; name: 'CustomDomainOwnershipVerification'; fields: { 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'value': { name: 'value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'CustomDomainSsl': { kind: 'OBJECT'; name: 'CustomDomainSsl'; fields: { 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CustomDomainValidationStatus'; ofType: null; }; } }; 'validationErrors': { name: 'validationErrors'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CustomDomainSslValidationError'; ofType: null; }; }; } }; 'validationRecords': { name: 'validationRecords'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CustomDomainSslValidationRecord'; ofType: null; }; }; }; } }; }; };
    'CustomDomainSslValidationError': { kind: 'OBJECT'; name: 'CustomDomainSslValidationError'; fields: { 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'CustomDomainSslValidationRecord': { kind: 'OBJECT'; name: 'CustomDomainSslValidationRecord'; fields: { 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'value': { name: 'value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'CustomDomainStatus': { name: 'CustomDomainStatus'; enumValues: 'active' | 'active_redeploying' | 'blocked' | 'deleted' | 'moved' | 'pending' | 'pending_blocked' | 'pending_deletion' | 'pending_migration' | 'pending_provisioned' | 'provisioned' | 'test_active' | 'test_active_apex' | 'test_blocked' | 'test_failed' | 'test_pending'; };
    'CustomDomainValidationStatus': { name: 'CustomDomainValidationStatus'; enumValues: 'active' | 'backup_issued' | 'deactivating' | 'deleted' | 'deletion_timed_out' | 'deployment_timed_out' | 'expired' | 'holding_deployment' | 'inactive' | 'initializing' | 'initializing_timed_out' | 'issuance_timed_out' | 'pending_cleanup' | 'pending_deletion' | 'pending_deployment' | 'pending_expiration' | 'pending_issuance' | 'pending_validation' | 'staging_active' | 'staging_deployment' | 'validation_timed_out'; };
    'CustomTeamMemberInput': { kind: 'INPUT_OBJECT'; name: 'CustomTeamMemberInput'; isOneOf: false; inputFields: [{ name: 'player'; type: { kind: 'INPUT_OBJECT'; name: 'CreatePlayerInput'; ofType: null; }; defaultValue: null }, { name: 'playerId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }]; };
    'DataRetrievalConfig': { kind: 'OBJECT'; name: 'DataRetrievalConfig'; fields: { 'headers': { name: 'headers'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Header'; ofType: null; }; }; }; } }; 'mappingConfiguration': { name: 'mappingConfiguration'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MappingConfiguration'; ofType: null; }; } }; 'url': { name: 'url'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'DataRetrievalConfigInput': { kind: 'INPUT_OBJECT'; name: 'DataRetrievalConfigInput'; isOneOf: false; inputFields: [{ name: 'headers'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'HeaderInput'; ofType: null; }; }; }; }; defaultValue: null }, { name: 'mappingConfiguration'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MappingConfigurationInput'; ofType: null; }; }; defaultValue: null }, { name: 'url'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'DateTime': unknown;
    'DeleteOrganizationAttachedAppInput': { kind: 'INPUT_OBJECT'; name: 'DeleteOrganizationAttachedAppInput'; isOneOf: false; inputFields: [{ name: 'appId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'DeleteOrganizationMembershipInput': { kind: 'INPUT_OBJECT'; name: 'DeleteOrganizationMembershipInput'; isOneOf: false; inputFields: [{ name: 'userId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }]; };
    'EmailAddress': unknown;
    'Float': unknown;
    'GameConfiguration': { kind: 'OBJECT'; name: 'GameConfiguration'; fields: { 'matchConfiguration': { name: 'matchConfiguration'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MatchConfiguration'; ofType: null; }; } }; 'teamsCount': { name: 'teamsCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; } }; 'useMatchScoresAsGameScore': { name: 'useMatchScoresAsGameScore'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'wonMatchCountToWinGame': { name: 'wonMatchCountToWinGame'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; } }; }; };
    'GameConfigurationInput': { kind: 'INPUT_OBJECT'; name: 'GameConfigurationInput'; isOneOf: false; inputFields: [{ name: 'matchConfiguration'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MatchConfigurationInput'; ofType: null; }; }; defaultValue: null }, { name: 'teamsCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; }; defaultValue: null }, { name: 'useMatchScoresAsGameScore'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; }; defaultValue: null }, { name: 'wonMatchCountToWinGame'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; }; defaultValue: null }]; };
    'GroupConfiguration': { kind: 'OBJECT'; name: 'GroupConfiguration'; fields: { 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'rounds': { name: 'rounds'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'RoundConfiguration'; ofType: null; }; }; }; } }; }; };
    'GroupConfigurationInput': { kind: 'INPUT_OBJECT'; name: 'GroupConfigurationInput'; isOneOf: false; inputFields: [{ name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'rounds'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'RoundConfigurationInput'; ofType: null; }; }; }; }; defaultValue: null }]; };
    'GroupPermission': { kind: 'OBJECT'; name: 'GroupPermission'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'resources': { name: 'resources'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'GroupPermissionInput': { kind: 'INPUT_OBJECT'; name: 'GroupPermissionInput'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'resources'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; }; defaultValue: null }]; };
    'GroupRepartitionMechanism': { name: 'GroupRepartitionMechanism'; enumValues: 'BALANCED' | 'SEED_OPTIMIZED'; };
    'Header': { kind: 'OBJECT'; name: 'Header'; fields: { 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'value': { name: 'value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'HeaderInput': { kind: 'INPUT_OBJECT'; name: 'HeaderInput'; isOneOf: false; inputFields: [{ name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'ID': unknown;
    'IdentityProviderAvailability': { name: 'IdentityProviderAvailability'; enumValues: 'PREVIEW' | 'PRIVATE' | 'PUBLIC'; };
    'IdentityProviderConfigurations': { kind: 'UNION'; name: 'IdentityProviderConfigurations'; fields: {}; possibleTypes: 'OAuthClientConfiguration' | 'OpenidConfiguration'; };
    'IdentityProviderPropertyInput': { kind: 'INPUT_OBJECT'; name: 'IdentityProviderPropertyInput'; isOneOf: false; inputFields: [{ name: 'identityProviderId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'property'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'IdentityProviderRequirements': { kind: 'OBJECT'; name: 'IdentityProviderRequirements'; fields: { 'requiredFields': { name: 'requiredFields'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'IdentityProviderType': { name: 'IdentityProviderType'; enumValues: 'OAUTH2' | 'OPENID'; };
    'Int': unknown;
    'JSONObject': unknown;
    'KeyMapping': { kind: 'OBJECT'; name: 'KeyMapping'; fields: { 'mappedTo': { name: 'mappedTo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'path': { name: 'path'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'private': { name: 'private'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; }; };
    'KeyMappingInput': { kind: 'INPUT_OBJECT'; name: 'KeyMappingInput'; isOneOf: false; inputFields: [{ name: 'mappedTo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'path'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'private'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }]; };
    'Leaderboard': { kind: 'OBJECT'; name: 'Leaderboard'; fields: { 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'description': { name: 'description'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'organizationId': { name: 'organizationId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'ownerId': { name: 'ownerId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'seasons': { name: 'seasons'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'LeaderboardSeasons'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; }; };
    'LeaderboardEdge': { kind: 'OBJECT'; name: 'LeaderboardEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Leaderboard'; ofType: null; }; }; }; } }; }; };
    'LeaderboardGetPlayerRankingInput': { kind: 'INPUT_OBJECT'; name: 'LeaderboardGetPlayerRankingInput'; isOneOf: false; inputFields: [{ name: 'leaderboardId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'playerId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'seasonId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }]; };
    'LeaderboardRegisterPlayerScoreInput': { kind: 'INPUT_OBJECT'; name: 'LeaderboardRegisterPlayerScoreInput'; isOneOf: false; inputFields: [{ name: 'leaderboardId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'playerId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'score'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'PositiveInt'; ofType: null; }; }; defaultValue: null }]; };
    'LeaderboardScoreCalculationType': { name: 'LeaderboardScoreCalculationType'; enumValues: 'SCORE'; };
    'LeaderboardSeason': { kind: 'OBJECT'; name: 'LeaderboardSeason'; fields: { 'buckets': { name: 'buckets'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'LeaderboardSeasonBuckets'; ofType: null; }; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'end': { name: 'end'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'leaderboardId': { name: 'leaderboardId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'start': { name: 'start'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'startingScore': { name: 'startingScore'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; }; };
    'LeaderboardSeasonBucket': { kind: 'OBJECT'; name: 'LeaderboardSeasonBucket'; fields: { 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'minScore': { name: 'minScore'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'scoreCalculationType': { name: 'scoreCalculationType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'LeaderboardScoreCalculationType'; ofType: null; }; } }; 'scores': { name: 'scores'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'LeaderboardSeasonBucketScores'; ofType: null; }; } }; 'seasonId': { name: 'seasonId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; }; };
    'LeaderboardSeasonBucketEdge': { kind: 'OBJECT'; name: 'LeaderboardSeasonBucketEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'LeaderboardSeasonBucket'; ofType: null; }; }; }; } }; }; };
    'LeaderboardSeasonBucketScore': { kind: 'OBJECT'; name: 'LeaderboardSeasonBucketScore'; fields: { 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'lastRank': { name: 'lastRank'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'lastScore': { name: 'lastScore'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'leaderboardSeasonBucketId': { name: 'leaderboardSeasonBucketId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'player': { name: 'player'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Player'; ofType: null; }; } }; 'playerProfileId': { name: 'playerProfileId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'rank': { name: 'rank'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; } }; 'score': { name: 'score'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; }; };
    'LeaderboardSeasonBucketScoreEdge': { kind: 'OBJECT'; name: 'LeaderboardSeasonBucketScoreEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'LeaderboardSeasonBucketScore'; ofType: null; }; }; }; } }; }; };
    'LeaderboardSeasonBucketScores': { kind: 'OBJECT'; name: 'LeaderboardSeasonBucketScores'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'LeaderboardSeasonBucketScoreEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'LeaderboardSeasonBucketScore'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ResponsePageInfo'; ofType: null; }; } }; 'totalCount': { name: 'totalCount'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; }; };
    'LeaderboardSeasonBuckets': { kind: 'OBJECT'; name: 'LeaderboardSeasonBuckets'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'LeaderboardSeasonBucketEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'LeaderboardSeasonBucket'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ResponsePageInfo'; ofType: null; }; } }; 'totalCount': { name: 'totalCount'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; }; };
    'LeaderboardSeasonEdge': { kind: 'OBJECT'; name: 'LeaderboardSeasonEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'LeaderboardSeason'; ofType: null; }; }; }; } }; }; };
    'LeaderboardSeasons': { kind: 'OBJECT'; name: 'LeaderboardSeasons'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'LeaderboardSeasonEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'LeaderboardSeason'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ResponsePageInfo'; ofType: null; }; } }; 'totalCount': { name: 'totalCount'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; }; };
    'Leaderboards': { kind: 'OBJECT'; name: 'Leaderboards'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'LeaderboardEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Leaderboard'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ResponsePageInfo'; ofType: null; }; } }; 'totalCount': { name: 'totalCount'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; }; };
    'Limit': { kind: 'OBJECT'; name: 'Limit'; fields: { 'bucketDuration': { name: 'bucketDuration'; type: { kind: 'ENUM'; name: 'BucketDuration'; ofType: null; } }; 'default': { name: 'default'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; } }; 'description': { name: 'description'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'max': { name: 'max'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'scope': { name: 'scope'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'LimitScope'; ofType: null; }; } }; 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'OrganizationLimitType'; ofType: null; }; } }; }; };
    'LimitOverride': { kind: 'OBJECT'; name: 'LimitOverride'; fields: { 'limit': { name: 'limit'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'OrganizationLimitsType'; ofType: null; }; } }; 'value': { name: 'value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; } }; }; };
    'LimitScope': { name: 'LimitScope'; enumValues: 'ORGANIZATION' | 'RESOURCE'; };
    'Limits': { kind: 'OBJECT'; name: 'Limits'; fields: { 'limits': { name: 'limits'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Limit'; ofType: null; }; }; }; } }; }; };
    'Log': { kind: 'OBJECT'; name: 'Log'; fields: { 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'data': { name: 'data'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'LogData'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'organizationId': { name: 'organizationId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'resourceId': { name: 'resourceId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'LogType'; ofType: null; }; } }; }; };
    'LogAuthorType': { name: 'LogAuthorType'; enumValues: 'APP' | 'SYSTEM' | 'USER'; };
    'LogData': { kind: 'OBJECT'; name: 'LogData'; fields: { 'author': { name: 'author'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'authorType': { name: 'authorType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'LogAuthorType'; ofType: null; }; } }; 'newValue': { name: 'newValue'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'JSONObject'; ofType: null; }; } }; 'oldValue': { name: 'oldValue'; type: { kind: 'SCALAR'; name: 'JSONObject'; ofType: null; } }; }; };
    'LogEdge': { kind: 'OBJECT'; name: 'LogEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Log'; ofType: null; }; }; }; } }; }; };
    'LogType': { name: 'LogType'; enumValues: 'WEBHOOK_CALL' | 'WEBHOOK_CALL_ERROR'; };
    'Logs': { kind: 'OBJECT'; name: 'Logs'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'LogEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Log'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ResponsePageInfo'; ofType: null; }; } }; 'totalCount': { name: 'totalCount'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; }; };
    'ManualSeedingGroupInput': { kind: 'INPUT_OBJECT'; name: 'ManualSeedingGroupInput'; isOneOf: false; inputFields: [{ name: 'group'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'teams'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; }; defaultValue: null }]; };
    'ManualSeedingInput': { kind: 'INPUT_OBJECT'; name: 'ManualSeedingInput'; isOneOf: false; inputFields: [{ name: 'groups'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'ManualSeedingGroupInput'; ofType: null; }; }; }; }; defaultValue: null }]; };
    'MappingConfiguration': { kind: 'OBJECT'; name: 'MappingConfiguration'; fields: { 'mappings': { name: 'mappings'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'KeyMapping'; ofType: null; }; }; }; } }; }; };
    'MappingConfigurationInput': { kind: 'INPUT_OBJECT'; name: 'MappingConfigurationInput'; isOneOf: false; inputFields: [{ name: 'mappings'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'KeyMappingInput'; ofType: null; }; }; }; }; defaultValue: null }]; };
    'MatchConfiguration': { kind: 'OBJECT'; name: 'MatchConfiguration'; fields: { 'scoreFormula': { name: 'scoreFormula'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'variables': { name: 'variables'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MatchVariable'; ofType: null; }; }; }; } }; }; };
    'MatchConfigurationInput': { kind: 'INPUT_OBJECT'; name: 'MatchConfigurationInput'; isOneOf: false; inputFields: [{ name: 'scoreFormula'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'variables'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MatchVariableInput'; ofType: null; }; }; }; }; defaultValue: null }]; };
    'MatchScoreStatus': { name: 'MatchScoreStatus'; enumValues: 'FORFEIT' | 'LOSER' | 'WAITING' | 'WINNER'; };
    'MatchStatus': { name: 'MatchStatus'; enumValues: 'ENDED' | 'STARTED' | 'WAITING'; };
    'MatchVariable': { kind: 'OBJECT'; name: 'MatchVariable'; fields: { 'defaultValue': { name: 'defaultValue'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; } }; 'displayIcon': { name: 'displayIcon'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'displayName': { name: 'displayName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'formulaName': { name: 'formulaName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'MatchVariableInput': { kind: 'INPUT_OBJECT'; name: 'MatchVariableInput'; isOneOf: false; inputFields: [{ name: 'defaultValue'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; }; defaultValue: null }, { name: 'displayIcon'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'displayName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'formulaName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'Mutation': { kind: 'OBJECT'; name: 'Mutation'; fields: { 'accountIdentityGenerateAccessToken': { name: 'accountIdentityGenerateAccessToken'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'accountIdentityRefresh': { name: 'accountIdentityRefresh'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AccountIdentity'; ofType: null; }; } }; 'answerToTournamentTeamInvite': { name: 'answerToTournamentTeamInvite'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'attachOrUpdateIdentityToAccount': { name: 'attachOrUpdateIdentityToAccount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AccountIdentity'; ofType: null; }; } }; 'confirmTournamentAttendance': { name: 'confirmTournamentAttendance'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TournamentTeam'; ofType: null; }; } }; 'confirmTournamentTeam': { name: 'confirmTournamentTeam'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TournamentTeam'; ofType: null; }; } }; 'createIdentityProvider': { name: 'createIdentityProvider'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrganizationIdentityProvider'; ofType: null; }; } }; 'createLeaderboard': { name: 'createLeaderboard'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Leaderboard'; ofType: null; }; } }; 'createLeaderboardSeason': { name: 'createLeaderboardSeason'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'LeaderboardSeason'; ofType: null; }; } }; 'createLeaderboardSeasonBucket': { name: 'createLeaderboardSeasonBucket'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'LeaderboardSeasonBucket'; ofType: null; }; } }; 'createOrUpdateMyPlayerProfile': { name: 'createOrUpdateMyPlayerProfile'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Player'; ofType: null; }; } }; 'createOrganization': { name: 'createOrganization'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Organization'; ofType: null; }; } }; 'createOrganizationApp': { name: 'createOrganizationApp'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrganizationApp'; ofType: null; }; } }; 'createOrganizationGroup': { name: 'createOrganizationGroup'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrganizationGroup'; ofType: null; }; } }; 'createPlayer': { name: 'createPlayer'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Player'; ofType: null; }; } }; 'createTournament': { name: 'createTournament'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Tournament'; ofType: null; }; } }; 'createTournamentStep': { name: 'createTournamentStep'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TournamentStep'; ofType: null; }; } }; 'createWebhook': { name: 'createWebhook'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Webhook'; ofType: null; }; } }; 'deleteAccount': { name: 'deleteAccount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'deleteAnyTournamentTeam': { name: 'deleteAnyTournamentTeam'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'deleteConfiguration': { name: 'deleteConfiguration'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'deleteIdentityProvider': { name: 'deleteIdentityProvider'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'deleteLeaderboard': { name: 'deleteLeaderboard'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Void'; ofType: null; }; } }; 'deleteLeaderboardSeason': { name: 'deleteLeaderboardSeason'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Void'; ofType: null; }; } }; 'deleteLeaderboardSeasonBucket': { name: 'deleteLeaderboardSeasonBucket'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Void'; ofType: null; }; } }; 'deleteOrganizationApp': { name: 'deleteOrganizationApp'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'deleteOrganizationAttachedApp': { name: 'deleteOrganizationAttachedApp'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'deleteOrganizationGroup': { name: 'deleteOrganizationGroup'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'deleteOrganizationMembership': { name: 'deleteOrganizationMembership'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'deletePlayer': { name: 'deletePlayer'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'deleteTournament': { name: 'deleteTournament'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'deleteTournamentStep': { name: 'deleteTournamentStep'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'deleteTournamentTeam': { name: 'deleteTournamentTeam'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'deleteTournamentTeamInvite': { name: 'deleteTournamentTeamInvite'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'deleteWebhook': { name: 'deleteWebhook'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Webhook'; ofType: null; }; } }; 'generateTournamentStep': { name: 'generateTournamentStep'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'inviteTournamentTeamMember': { name: 'inviteTournamentTeamMember'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'leaderboardRegisterPlayerScore': { name: 'leaderboardRegisterPlayerScore'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'LeaderboardSeasonBucketScore'; ofType: null; }; } }; 'organizationSkillRatingCreate': { name: 'organizationSkillRatingCreate'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrganizationSkillRating'; ofType: null; }; } }; 'organizationSkillRatingDelete': { name: 'organizationSkillRatingDelete'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Void'; ofType: null; }; } }; 'organizationSkillRatingUpdate': { name: 'organizationSkillRatingUpdate'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrganizationSkillRating'; ofType: null; }; } }; 'organizationSkillRatingsRegisterMatch': { name: 'organizationSkillRatingsRegisterMatch'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Void'; ofType: null; }; } }; 'organizationSubscriptionItemsUpdate': { name: 'organizationSubscriptionItemsUpdate'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Void'; ofType: null; }; } }; 'platformCreate': { name: 'platformCreate'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Platform'; ofType: null; }; } }; 'platformDelete': { name: 'platformDelete'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Void'; ofType: null; }; } }; 'platformFileCreate': { name: 'platformFileCreate'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PlatformCdnFile'; ofType: null; }; } }; 'platformFileDelete': { name: 'platformFileDelete'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Void'; ofType: null; }; } }; 'platformFilePublish': { name: 'platformFilePublish'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Void'; ofType: null; }; } }; 'platformFileUpdate': { name: 'platformFileUpdate'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PlatformCdnFile'; ofType: null; }; } }; 'platformForceCustomDomainRecheck': { name: 'platformForceCustomDomainRecheck'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CustomDomainData'; ofType: null; }; } }; 'platformRegisterCustomDomain': { name: 'platformRegisterCustomDomain'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CustomDomainData'; ofType: null; }; } }; 'platformRemoveCustomDomain': { name: 'platformRemoveCustomDomain'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Void'; ofType: null; }; } }; 'platformUpdate': { name: 'platformUpdate'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Platform'; ofType: null; }; } }; 'regenerateWebhookSecret': { name: 'regenerateWebhookSecret'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Webhook'; ofType: null; }; } }; 'registerCustomTournamentTeams': { name: 'registerCustomTournamentTeams'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TournamentTeam'; ofType: null; }; }; }; } }; 'registerTournamentTeam': { name: 'registerTournamentTeam'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TournamentTeam'; ofType: null; }; } }; 'resetOrganizationAppSecret': { name: 'resetOrganizationAppSecret'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'seedTournamentStep': { name: 'seedTournamentStep'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'setOrganizationAttachedApp': { name: 'setOrganizationAttachedApp'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrganizationAttachedApp'; ofType: null; }; } }; 'setOrganizationMembership': { name: 'setOrganizationMembership'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrganizationMember'; ofType: null; }; } }; 'startTournamentStep': { name: 'startTournamentStep'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'stripeCreatePortalSession': { name: 'stripeCreatePortalSession'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'tournamentAdminDelete': { name: 'tournamentAdminDelete'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'tournamentAdminUpsert': { name: 'tournamentAdminUpsert'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TournamentAdmin'; ofType: null; }; } }; 'updateConfiguration': { name: 'updateConfiguration'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Configuration'; ofType: null; }; } }; 'updateIdentityProvider': { name: 'updateIdentityProvider'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrganizationIdentityProvider'; ofType: null; }; } }; 'updateLeaderboard': { name: 'updateLeaderboard'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Leaderboard'; ofType: null; }; } }; 'updateLeaderboardSeason': { name: 'updateLeaderboardSeason'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'LeaderboardSeason'; ofType: null; }; } }; 'updateLeaderboardSeasonBucket': { name: 'updateLeaderboardSeasonBucket'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'LeaderboardSeasonBucket'; ofType: null; }; } }; 'updateMatchScores': { name: 'updateMatchScores'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TournamentStepGroupRoundGameMatch'; ofType: null; }; } }; 'updateOrganization': { name: 'updateOrganization'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Organization'; ofType: null; }; } }; 'updateOrganizationApp': { name: 'updateOrganizationApp'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrganizationApp'; ofType: null; }; } }; 'updateOrganizationGroup': { name: 'updateOrganizationGroup'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrganizationGroup'; ofType: null; }; } }; 'updatePlayer': { name: 'updatePlayer'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Player'; ofType: null; }; } }; 'updateTournament': { name: 'updateTournament'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Tournament'; ofType: null; }; } }; 'updateTournamentStep': { name: 'updateTournamentStep'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TournamentStep'; ofType: null; }; } }; 'updateTournamentTeam': { name: 'updateTournamentTeam'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TournamentTeam'; ofType: null; }; } }; 'updateTournamentTeamStatus': { name: 'updateTournamentTeamStatus'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TournamentTeam'; ofType: null; }; } }; 'updateWebhook': { name: 'updateWebhook'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Webhook'; ofType: null; }; } }; }; };
    'NumberConditionInput': { kind: 'INPUT_OBJECT'; name: 'NumberConditionInput'; isOneOf: false; inputFields: [{ name: 'conditionType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'NumberConditionType'; ofType: null; }; }; defaultValue: null }, { name: 'value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; }; defaultValue: null }]; };
    'NumberConditionType': { name: 'NumberConditionType'; enumValues: 'BT' | 'BTE' | 'EQ' | 'LT' | 'LTE' | 'NEQ'; };
    'NumericCondition': { kind: 'OBJECT'; name: 'NumericCondition'; fields: { 'conditionType': { name: 'conditionType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'NumberConditionType'; ofType: null; }; } }; 'value': { name: 'value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; } }; }; };
    'OAuthClientConfiguration': { kind: 'OBJECT'; name: 'OAuthClientConfiguration'; fields: { 'authorizationEndpoint': { name: 'authorizationEndpoint'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'authorizationUrl': { name: 'authorizationUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'clientId': { name: 'clientId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'clientSecret': { name: 'clientSecret'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'dataRetrievers': { name: 'dataRetrievers'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DataRetrievalConfig'; ofType: null; }; }; }; } }; 'issuer': { name: 'issuer'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'providerType': { name: 'providerType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'IdentityProviderType'; ofType: null; }; } }; 'redirectUrl': { name: 'redirectUrl'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'tokenEndpoint': { name: 'tokenEndpoint'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'tokenEndpointAuthMethod': { name: 'tokenEndpointAuthMethod'; type: { kind: 'ENUM'; name: 'OauthEndpointAuthMethod'; ofType: null; } }; }; };
    'OAuthClientConfigurationInput': { kind: 'INPUT_OBJECT'; name: 'OAuthClientConfigurationInput'; isOneOf: false; inputFields: [{ name: 'authorizationEndpoint'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'authorizationUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'clientId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'clientSecret'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'dataRetrievers'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'DataRetrievalConfigInput'; ofType: null; }; }; }; }; defaultValue: null }, { name: 'issuer'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'providerType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'IdentityProviderType'; ofType: null; }; }; defaultValue: null }, { name: 'redirectUrl'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'tokenEndpoint'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'tokenEndpointAuthMethod'; type: { kind: 'ENUM'; name: 'OauthEndpointAuthMethod'; ofType: null; }; defaultValue: "CLIENT_SECRET_POST" }]; };
    'OauthEndpointAuthMethod': { name: 'OauthEndpointAuthMethod'; enumValues: 'CLIENT_SECRET_BASIC' | 'CLIENT_SECRET_JWT' | 'CLIENT_SECRET_POST' | 'NONE' | 'PRIVATE_KEY_JWT' | 'SELF_SIGNED_TLS_CLIENT_AUTH' | 'TLS_CLIENT_AUTH'; };
    'OpenidConfiguration': { kind: 'OBJECT'; name: 'OpenidConfiguration'; fields: { 'authorizationEndpoint': { name: 'authorizationEndpoint'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'clientId': { name: 'clientId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'clientSecret': { name: 'clientSecret'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'dataRetrievers': { name: 'dataRetrievers'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DataRetrievalConfig'; ofType: null; }; }; }; } }; 'issuer': { name: 'issuer'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'providerType': { name: 'providerType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'IdentityProviderType'; ofType: null; }; } }; 'redirectUrl': { name: 'redirectUrl'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'OpenidConfigurationInput': { kind: 'INPUT_OBJECT'; name: 'OpenidConfigurationInput'; isOneOf: false; inputFields: [{ name: 'authorizationEndpoint'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'clientId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'clientSecret'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'dataRetrievers'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'DataRetrievalConfigInput'; ofType: null; }; }; }; }; defaultValue: null }, { name: 'issuer'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'providerType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'IdentityProviderType'; ofType: null; }; }; defaultValue: null }, { name: 'redirectUrl'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'OrderByProperty': { kind: 'INPUT_OBJECT'; name: 'OrderByProperty'; isOneOf: false; inputFields: [{ name: 'order'; type: { kind: 'ENUM'; name: 'OrderDirection'; ofType: null; }; defaultValue: null }, { name: 'property'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'OrderDirection': { name: 'OrderDirection'; enumValues: 'ASC' | 'DESC'; };
    'Organization': { kind: 'OBJECT'; name: 'Organization'; fields: { 'configuration': { name: 'configuration'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrganizationConfiguration'; ofType: null; }; } }; 'description': { name: 'description'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'groups': { name: 'groups'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrganizationGroup'; ofType: null; }; }; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'identityProviders': { name: 'identityProviders'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PublicOrganizationIdentityProvider'; ofType: null; }; }; }; } }; 'members': { name: 'members'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrganizationMember'; ofType: null; }; }; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'ownerId': { name: 'ownerId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'stripeConfigured': { name: 'stripeConfigured'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'tournaments': { name: 'tournaments'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Tournament'; ofType: null; }; }; }; } }; }; };
    'OrganizationApp': { kind: 'OBJECT'; name: 'OrganizationApp'; fields: { 'configuration': { name: 'configuration'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrganizationAppConfig'; ofType: null; }; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'creator': { name: 'creator'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Account'; ofType: null; }; } }; 'creatorId': { name: 'creatorId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'description': { name: 'description'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'organizationId': { name: 'organizationId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'public': { name: 'public'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'secret': { name: 'secret'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; }; };
    'OrganizationAppConfig': { kind: 'OBJECT'; name: 'OrganizationAppConfig'; fields: { 'logoutRedirectUrls': { name: 'logoutRedirectUrls'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'metadata': { name: 'metadata'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrganizationAppConfigMetadata'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'organizationId': { name: 'organizationId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'redirectUrls': { name: 'redirectUrls'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'scope': { name: 'scope'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'OrganizationAppConfigMetadata': { kind: 'OBJECT'; name: 'OrganizationAppConfigMetadata'; fields: { 'consentUrl': { name: 'consentUrl'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'creatorId': { name: 'creatorId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'loginUrl': { name: 'loginUrl'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'public': { name: 'public'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'requiresConsent': { name: 'requiresConsent'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'OrganizationAppEdge': { kind: 'OBJECT'; name: 'OrganizationAppEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrganizationApp'; ofType: null; }; }; }; } }; }; };
    'OrganizationApps': { kind: 'OBJECT'; name: 'OrganizationApps'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrganizationAppEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrganizationApp'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ResponsePageInfo'; ofType: null; }; } }; 'totalCount': { name: 'totalCount'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; }; };
    'OrganizationAttachedApp': { kind: 'OBJECT'; name: 'OrganizationAttachedApp'; fields: { 'app': { name: 'app'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrganizationApp'; ofType: null; }; } }; 'appId': { name: 'appId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'group': { name: 'group'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrganizationGroup'; ofType: null; }; } }; 'groupId': { name: 'groupId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'organizationId': { name: 'organizationId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'permissions': { name: 'permissions'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'GroupPermission'; ofType: null; }; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; }; };
    'OrganizationAttachedAppEdge': { kind: 'OBJECT'; name: 'OrganizationAttachedAppEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrganizationAttachedApp'; ofType: null; }; }; }; } }; }; };
    'OrganizationAttachedApps': { kind: 'OBJECT'; name: 'OrganizationAttachedApps'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrganizationAttachedAppEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrganizationAttachedApp'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ResponsePageInfo'; ofType: null; }; } }; 'totalCount': { name: 'totalCount'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; }; };
    'OrganizationConfiguration': { kind: 'OBJECT'; name: 'OrganizationConfiguration'; fields: { 'customFields': { name: 'customFields'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Property'; ofType: null; }; }; }; } }; }; };
    'OrganizationConfigurationInput': { kind: 'INPUT_OBJECT'; name: 'OrganizationConfigurationInput'; isOneOf: false; inputFields: [{ name: 'customFields'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'PropertyInput'; ofType: null; }; }; }; }; defaultValue: null }]; };
    'OrganizationGroup': { kind: 'OBJECT'; name: 'OrganizationGroup'; fields: { 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'organizationId': { name: 'organizationId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'permissions': { name: 'permissions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'GroupPermission'; ofType: null; }; }; }; } }; 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'OrganizationGroupType'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; }; };
    'OrganizationGroupEdge': { kind: 'OBJECT'; name: 'OrganizationGroupEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrganizationGroup'; ofType: null; }; }; }; } }; }; };
    'OrganizationGroupType': { name: 'OrganizationGroupType'; enumValues: 'ADMIN' | 'ANONYMOUS' | 'CONNECTED' | 'MEMBER'; };
    'OrganizationGroups': { kind: 'OBJECT'; name: 'OrganizationGroups'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrganizationGroupEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrganizationGroup'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ResponsePageInfo'; ofType: null; }; } }; 'totalCount': { name: 'totalCount'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; }; };
    'OrganizationIdentityProvider': { kind: 'OBJECT'; name: 'OrganizationIdentityProvider'; fields: { 'allowLogin': { name: 'allowLogin'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'configuration': { name: 'configuration'; type: { kind: 'UNION'; name: 'IdentityProviderConfigurations'; ofType: null; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'description': { name: 'description'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'icon': { name: 'icon'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'identityProviderId': { name: 'identityProviderId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'organizationId': { name: 'organizationId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'parentIdentityProvider': { name: 'parentIdentityProvider'; type: { kind: 'OBJECT'; name: 'PublicIdentityProvider'; ofType: null; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; }; };
    'OrganizationLimit': { kind: 'OBJECT'; name: 'OrganizationLimit'; fields: { 'current': { name: 'current'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'max': { name: 'max'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; } }; }; };
    'OrganizationLimitType': { name: 'OrganizationLimitType'; enumValues: 'BOOLEAN' | 'BYTES' | 'DAYS' | 'NUMBER'; };
    'OrganizationLimits': { kind: 'OBJECT'; name: 'OrganizationLimits'; fields: { 'limits': { name: 'limits'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrganizationLimit'; ofType: null; }; }; }; } }; }; };
    'OrganizationLimitsType': { name: 'OrganizationLimitsType'; enumValues: 'ANONYMOUS_PLAYER_PROFILES' | 'APPS' | 'ATTACHED_APPS' | 'CUSTOM_FIELDS' | 'CUSTOM_IDENTITY_PROVIDERS' | 'LEADERBOARDS' | 'LEADERBOARD_BUCKETS' | 'LEADERBOARD_ENTRIES' | 'LEADERBOARD_SEASONS' | 'ORGANIZATION_GROUPS' | 'ORGANIZATION_MEMBERS' | 'ORGANIZATION_STORAGE_SIZE' | 'PLATFORMS' | 'PLATFORM_CUSTOM_DOMAINS' | 'REGISTERED_USERS' | 'SKILL_RATINGS' | 'TOURNAMENT_REGISTRATION_RULES' | 'TOURNAMENT_STEPS' | 'TOURNAMENT_STEP_GROUPS' | 'TOURNAMENT_TEAMS_REGISTERED' | 'TOURNAMENT_TEAM_SIZE' | 'WEBHOOKS' | 'WHITE_LABEL'; };
    'OrganizationMember': { kind: 'OBJECT'; name: 'OrganizationMember'; fields: { 'account': { name: 'account'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Account'; ofType: null; }; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'group': { name: 'group'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrganizationGroup'; ofType: null; }; } }; 'groupId': { name: 'groupId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'memberId': { name: 'memberId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'organizationId': { name: 'organizationId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'permissions': { name: 'permissions'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'GroupPermission'; ofType: null; }; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; }; };
    'OrganizationMemberEdge': { kind: 'OBJECT'; name: 'OrganizationMemberEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrganizationMember'; ofType: null; }; }; }; } }; }; };
    'OrganizationMembers': { kind: 'OBJECT'; name: 'OrganizationMembers'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrganizationMemberEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrganizationMember'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ResponsePageInfo'; ofType: null; }; } }; 'totalCount': { name: 'totalCount'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; }; };
    'OrganizationSkillRating': { kind: 'OBJECT'; name: 'OrganizationSkillRating'; fields: { 'configuration': { name: 'configuration'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SkillRatingConfiguration'; ofType: null; }; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'description': { name: 'description'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'organizationId': { name: 'organizationId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'SkillRatingType'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; }; };
    'OrganizationSkillRatingCreateInput': { kind: 'INPUT_OBJECT'; name: 'OrganizationSkillRatingCreateInput'; isOneOf: false; inputFields: [{ name: 'configuration'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'SkillRatingConfigurationInput'; ofType: null; }; }; defaultValue: null }, { name: 'description'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'SkillRatingType'; ofType: null; }; }; defaultValue: null }]; };
    'OrganizationSkillRatingUpdateInput': { kind: 'INPUT_OBJECT'; name: 'OrganizationSkillRatingUpdateInput'; isOneOf: false; inputFields: [{ name: 'configuration'; type: { kind: 'INPUT_OBJECT'; name: 'SkillRatingConfigurationInput'; ofType: null; }; defaultValue: null }, { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'type'; type: { kind: 'ENUM'; name: 'SkillRatingType'; ofType: null; }; defaultValue: null }]; };
    'OrganizationSkillRatingsRegisterMatchInput': { kind: 'INPUT_OBJECT'; name: 'OrganizationSkillRatingsRegisterMatchInput'; isOneOf: false; inputFields: [{ name: 'teams'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'OrganizationSkillRatingsRegisterMatchTeamInput'; ofType: null; }; }; }; }; defaultValue: null }]; };
    'OrganizationSkillRatingsRegisterMatchTeamInput': { kind: 'INPUT_OBJECT'; name: 'OrganizationSkillRatingsRegisterMatchTeamInput'; isOneOf: false; inputFields: [{ name: 'players'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; }; defaultValue: null }]; };
    'OrganizationSubscriptionItem': { kind: 'OBJECT'; name: 'OrganizationSubscriptionItem'; fields: { 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'endAt': { name: 'endAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'organizationId': { name: 'organizationId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'subscriptionItem': { name: 'subscriptionItem'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SubscriptionItem'; ofType: null; }; } }; 'subscriptionItemId': { name: 'subscriptionItemId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; }; };
    'OrganizationSubscriptionItemUpdateInput': { kind: 'INPUT_OBJECT'; name: 'OrganizationSubscriptionItemUpdateInput'; isOneOf: false; inputFields: [{ name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; }; defaultValue: null }, { name: 'subscriptionItemId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }]; };
    'PageInfo': { kind: 'INPUT_OBJECT'; name: 'PageInfo'; isOneOf: false; inputFields: [{ name: 'after'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'first'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; defaultValue: null }]; };
    'Permission': { kind: 'OBJECT'; name: 'Permission'; fields: { 'availableVariables': { name: 'availableVariables'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'description': { name: 'description'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'resources': { name: 'resources'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'Permissions': { kind: 'OBJECT'; name: 'Permissions'; fields: { 'organizationPermissions': { name: 'organizationPermissions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Permission'; ofType: null; }; }; }; } }; }; };
    'Platform': { kind: 'OBJECT'; name: 'Platform'; fields: { 'configuration': { name: 'configuration'; type: { kind: 'OBJECT'; name: 'PlatformConfiguration'; ofType: null; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'customDomains': { name: 'customDomains'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PlatformCustomDomainData'; ofType: null; }; }; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'organizationId': { name: 'organizationId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; }; };
    'PlatformCdnFile': { kind: 'OBJECT'; name: 'PlatformCdnFile'; fields: { 'config': { name: 'config'; type: { kind: 'OBJECT'; name: 'PlatformCdnFileConfigs'; ofType: null; } }; 'contents': { name: 'contents'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'platformId': { name: 'platformId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'size': { name: 'size'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; } }; 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'PlatformCdnFileType'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; }; };
    'PlatformCdnFileConfigs': { kind: 'OBJECT'; name: 'PlatformCdnFileConfigs'; fields: { 'pageConfig': { name: 'pageConfig'; type: { kind: 'OBJECT'; name: 'PlatformCdnFilePageConfig'; ofType: null; } }; }; };
    'PlatformCdnFileConfigsInput': { kind: 'INPUT_OBJECT'; name: 'PlatformCdnFileConfigsInput'; isOneOf: false; inputFields: [{ name: 'pageConfig'; type: { kind: 'INPUT_OBJECT'; name: 'PlatformCdnFilePageConfigInput'; ofType: null; }; defaultValue: null }]; };
    'PlatformCdnFileCreateInput': { kind: 'INPUT_OBJECT'; name: 'PlatformCdnFileCreateInput'; isOneOf: false; inputFields: [{ name: 'config'; type: { kind: 'INPUT_OBJECT'; name: 'PlatformCdnFileConfigsInput'; ofType: null; }; defaultValue: null }, { name: 'contents'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'PlatformCdnFileType'; ofType: null; }; }; defaultValue: null }]; };
    'PlatformCdnFilePageConfig': { kind: 'OBJECT'; name: 'PlatformCdnFilePageConfig'; fields: { 'path': { name: 'path'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'PlatformCdnFilePageConfigInput': { kind: 'INPUT_OBJECT'; name: 'PlatformCdnFilePageConfigInput'; isOneOf: false; inputFields: [{ name: 'path'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'PlatformCdnFileType': { name: 'PlatformCdnFileType'; enumValues: 'COMPONENT' | 'IMAGE' | 'PAGE' | 'TEXT'; };
    'PlatformConfiguration': { kind: 'OBJECT'; name: 'PlatformConfiguration'; fields: { 'whitelabel': { name: 'whitelabel'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; }; };
    'PlatformConfigurationInput': { kind: 'INPUT_OBJECT'; name: 'PlatformConfigurationInput'; isOneOf: false; inputFields: [{ name: 'whitelabel'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }]; };
    'PlatformCustomDomainData': { kind: 'OBJECT'; name: 'PlatformCustomDomainData'; fields: { 'configuration': { name: 'configuration'; type: { kind: 'OBJECT'; name: 'CustomDomainData'; ofType: null; } }; 'domain': { name: 'domain'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'PlatformFileUpdateInput': { kind: 'INPUT_OBJECT'; name: 'PlatformFileUpdateInput'; isOneOf: false; inputFields: [{ name: 'config'; type: { kind: 'INPUT_OBJECT'; name: 'PlatformCdnFileConfigsInput'; ofType: null; }; defaultValue: null }, { name: 'contents'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'Player': { kind: 'OBJECT'; name: 'Player'; fields: { 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'customFields': { name: 'customFields'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PropertyConfigWithValue'; ofType: null; }; }; }; } }; 'description': { name: 'description'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'identities': { name: 'identities'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AccountIdentity'; ofType: null; }; }; } }; 'organizationCustomId': { name: 'organizationCustomId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'owner': { name: 'owner'; type: { kind: 'OBJECT'; name: 'Account'; ofType: null; } }; 'ownerId': { name: 'ownerId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'profilePicUrl': { name: 'profilePicUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'username': { name: 'username'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'PlayerCondition': { kind: 'OBJECT'; name: 'PlayerCondition'; fields: { 'condition': { name: 'condition'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Condition'; ofType: null; }; } }; 'errorMessage': { name: 'errorMessage'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'propertySource': { name: 'propertySource'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'PlayerConditionDataSource'; ofType: null; }; } }; 'propertySourceId': { name: 'propertySourceId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'ruleDescription': { name: 'ruleDescription'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'PlayerConditionDataSource': { name: 'PlayerConditionDataSource'; enumValues: 'IDENTITY_PROVIDER' | 'PLAYER'; };
    'PlayerConditionInput': { kind: 'INPUT_OBJECT'; name: 'PlayerConditionInput'; isOneOf: false; inputFields: [{ name: 'condition'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'ConditionInput'; ofType: null; }; }; defaultValue: null }, { name: 'errorMessage'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'propertySource'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'PlayerConditionDataSource'; ofType: null; }; }; defaultValue: null }, { name: 'propertySourceId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'ruleDescription'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'PlayerCustomFieldInput': { kind: 'INPUT_OBJECT'; name: 'PlayerCustomFieldInput'; isOneOf: false; inputFields: [{ name: 'property'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'PlayerEdge': { kind: 'OBJECT'; name: 'PlayerEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Player'; ofType: null; }; }; }; } }; }; };
    'PlayerSkillRating': { kind: 'OBJECT'; name: 'PlayerSkillRating'; fields: { 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'player': { name: 'player'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Player'; ofType: null; }; } }; 'playerProfileId': { name: 'playerProfileId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'ratingId': { name: 'ratingId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'value': { name: 'value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; } }; }; };
    'Players': { kind: 'OBJECT'; name: 'Players'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PlayerEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Player'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ResponsePageInfo'; ofType: null; }; } }; 'totalCount': { name: 'totalCount'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; }; };
    'PositiveInt': unknown;
    'Property': { kind: 'OBJECT'; name: 'Property'; fields: { 'editability': { name: 'editability'; type: { kind: 'ENUM'; name: 'ProperyEditability'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'order': { name: 'order'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; } }; 'property': { name: 'property'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'public': { name: 'public'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'required': { name: 'required'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'PropertyType'; ofType: null; }; } }; 'unique': { name: 'unique'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'visibility': { name: 'visibility'; type: { kind: 'ENUM'; name: 'PropertyVisibility'; ofType: null; } }; }; };
    'PropertyCondition': { name: 'PropertyCondition'; enumValues: 'DONT_EXIST' | 'EXISTS'; };
    'PropertyConfigWithValue': { kind: 'OBJECT'; name: 'PropertyConfigWithValue'; fields: { 'editability': { name: 'editability'; type: { kind: 'ENUM'; name: 'ProperyEditability'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'order': { name: 'order'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; } }; 'property': { name: 'property'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'public': { name: 'public'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'required': { name: 'required'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'PropertyType'; ofType: null; }; } }; 'unique': { name: 'unique'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'value': { name: 'value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'visibility': { name: 'visibility'; type: { kind: 'ENUM'; name: 'PropertyVisibility'; ofType: null; } }; }; };
    'PropertyInput': { kind: 'INPUT_OBJECT'; name: 'PropertyInput'; isOneOf: false; inputFields: [{ name: 'editability'; type: { kind: 'ENUM'; name: 'ProperyEditability'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'order'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; }; defaultValue: null }, { name: 'property'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'public'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'required'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; }; defaultValue: null }, { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'PropertyType'; ofType: null; }; }; defaultValue: null }, { name: 'unique'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; }; defaultValue: null }, { name: 'visibility'; type: { kind: 'ENUM'; name: 'PropertyVisibility'; ofType: null; }; defaultValue: null }]; };
    'PropertyType': { name: 'PropertyType'; enumValues: 'BOOLEAN' | 'COUNTRY' | 'DATE' | 'PHONE' | 'STRING'; };
    'PropertyValueInput': { kind: 'INPUT_OBJECT'; name: 'PropertyValueInput'; isOneOf: false; inputFields: [{ name: 'property'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'PropertyVisibility': { name: 'PropertyVisibility'; enumValues: 'OWNER' | 'OWNER_OR_PERMISSION' | 'PUBLIC' | 'WITH_PERMISSION'; };
    'ProperyEditability': { name: 'ProperyEditability'; enumValues: 'ALWAYS' | 'ONE_TIME' | 'WITH_PERMISSION'; };
    'PublicIdentityProvider': { kind: 'OBJECT'; name: 'PublicIdentityProvider'; fields: { 'availability': { name: 'availability'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'IdentityProviderAvailability'; ofType: null; }; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'icon': { name: 'icon'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'requirements': { name: 'requirements'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'IdentityProviderRequirements'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; }; };
    'PublicOrganizationIdentityProvider': { kind: 'OBJECT'; name: 'PublicOrganizationIdentityProvider'; fields: { 'allowLogin': { name: 'allowLogin'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'authorizationUrl': { name: 'authorizationUrl'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'description': { name: 'description'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'icon': { name: 'icon'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'Query': { kind: 'OBJECT'; name: 'Query'; fields: { 'availablePermissions': { name: 'availablePermissions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Permissions'; ofType: null; }; } }; 'availableRootIdentityProvider': { name: 'availableRootIdentityProvider'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PublicIdentityProvider'; ofType: null; }; } }; 'configuration': { name: 'configuration'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Configuration'; ofType: null; }; } }; 'currentLeaderboardSeason': { name: 'currentLeaderboardSeason'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'LeaderboardSeason'; ofType: null; }; } }; 'getAvailableRootIdentityProviders': { name: 'getAvailableRootIdentityProviders'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PublicIdentityProvider'; ofType: null; }; }; }; } }; 'getMyAccount': { name: 'getMyAccount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Account'; ofType: null; }; } }; 'identityProvider': { name: 'identityProvider'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrganizationIdentityProvider'; ofType: null; }; } }; 'identityProviders': { name: 'identityProviders'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrganizationIdentityProvider'; ofType: null; }; }; }; } }; 'leaderboard': { name: 'leaderboard'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Leaderboard'; ofType: null; }; } }; 'leaderboardCurrentPlayerRanking': { name: 'leaderboardCurrentPlayerRanking'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'LeaderboardSeasonBucketScore'; ofType: null; }; } }; 'leaderboardSeason': { name: 'leaderboardSeason'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'LeaderboardSeason'; ofType: null; }; } }; 'leaderboardSeasonBucket': { name: 'leaderboardSeasonBucket'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'LeaderboardSeasonBucket'; ofType: null; }; } }; 'leaderboardSeasonBuckets': { name: 'leaderboardSeasonBuckets'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'LeaderboardSeasonBuckets'; ofType: null; }; } }; 'leaderboardSeasons': { name: 'leaderboardSeasons'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'LeaderboardSeasons'; ofType: null; }; } }; 'leaderboards': { name: 'leaderboards'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Leaderboards'; ofType: null; }; } }; 'limitDefinitions': { name: 'limitDefinitions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Limits'; ofType: null; }; } }; 'logs': { name: 'logs'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Logs'; ofType: null; }; } }; 'match': { name: 'match'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TournamentStepGroupRoundGameMatch'; ofType: null; }; } }; 'organization': { name: 'organization'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Organization'; ofType: null; }; } }; 'organizationApp': { name: 'organizationApp'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrganizationApp'; ofType: null; }; } }; 'organizationApps': { name: 'organizationApps'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrganizationApps'; ofType: null; }; } }; 'organizationAttachedApps': { name: 'organizationAttachedApps'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrganizationAttachedApps'; ofType: null; }; } }; 'organizationCurrentSubscriptionItems': { name: 'organizationCurrentSubscriptionItems'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrganizationSubscriptionItem'; ofType: null; }; }; }; } }; 'organizationGroup': { name: 'organizationGroup'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrganizationGroup'; ofType: null; }; } }; 'organizationGroups': { name: 'organizationGroups'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrganizationGroups'; ofType: null; }; } }; 'organizationLimits': { name: 'organizationLimits'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrganizationLimits'; ofType: null; }; } }; 'organizationMembers': { name: 'organizationMembers'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrganizationMembers'; ofType: null; }; } }; 'organizationSkillRating': { name: 'organizationSkillRating'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrganizationSkillRating'; ofType: null; }; } }; 'organizationSkillRatings': { name: 'organizationSkillRatings'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrganizationSkillRating'; ofType: null; }; }; }; } }; 'platform': { name: 'platform'; type: { kind: 'OBJECT'; name: 'Platform'; ofType: null; } }; 'platformCheckDomainAvailability': { name: 'platformCheckDomainAvailability'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'platformCustomDomains': { name: 'platformCustomDomains'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PlatformCustomDomainData'; ofType: null; }; }; }; } }; 'platformFile': { name: 'platformFile'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PlatformCdnFile'; ofType: null; }; } }; 'platformFiles': { name: 'platformFiles'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PlatformCdnFile'; ofType: null; }; }; }; } }; 'platformFindFromDomain': { name: 'platformFindFromDomain'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Platform'; ofType: null; }; } }; 'platforms': { name: 'platforms'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Platform'; ofType: null; }; }; }; } }; 'player': { name: 'player'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Player'; ofType: null; }; } }; 'playerMatchesHistory': { name: 'playerMatchesHistory'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TournamentStepGroupRoundGameMatches'; ofType: null; }; } }; 'playerSkillRatings': { name: 'playerSkillRatings'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PlayerSkillRating'; ofType: null; }; }; }; } }; 'players': { name: 'players'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Players'; ofType: null; }; } }; 'searchPlayer': { name: 'searchPlayer'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Player'; ofType: null; }; }; }; } }; 'subscriptionItems': { name: 'subscriptionItems'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SubscriptionItem'; ofType: null; }; }; }; } }; 'tournament': { name: 'tournament'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Tournament'; ofType: null; }; } }; 'tournamentAdmins': { name: 'tournamentAdmins'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TournamentAdmin'; ofType: null; }; }; }; } }; 'tournamentPlayers': { name: 'tournamentPlayers'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TeamMembers'; ofType: null; }; } }; 'tournamentStep': { name: 'tournamentStep'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TournamentStep'; ofType: null; }; } }; 'tournamentStepGeneratedShape': { name: 'tournamentStepGeneratedShape'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TournamentStepGroup'; ofType: null; }; }; }; } }; 'tournamentStepGroupRoundGameMatchScoresGetForStep': { name: 'tournamentStepGroupRoundGameMatchScoresGetForStep'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TournamentStepGroupRoundGameMatchScores'; ofType: null; }; } }; 'tournamentSteps': { name: 'tournamentSteps'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TournamentStep'; ofType: null; }; }; }; } }; 'tournamentTeam': { name: 'tournamentTeam'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TournamentTeam'; ofType: null; }; } }; 'tournamentTeamInvites': { name: 'tournamentTeamInvites'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TeamMembers'; ofType: null; }; } }; 'tournamentTeams': { name: 'tournamentTeams'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TournamentTeams'; ofType: null; }; } }; 'tournaments': { name: 'tournaments'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Tournaments'; ofType: null; }; } }; 'userOrganizations': { name: 'userOrganizations'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Organization'; ofType: null; }; }; }; } }; 'webhook': { name: 'webhook'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Webhook'; ofType: null; }; } }; 'webhookAvailableEvents': { name: 'webhookAvailableEvents'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'WebhookEventConfiguration'; ofType: null; }; }; }; } }; 'webhooks': { name: 'webhooks'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Webhook'; ofType: null; }; }; }; } }; }; };
    'QueryPlayersInput': { kind: 'INPUT_OBJECT'; name: 'QueryPlayersInput'; isOneOf: false; inputFields: [{ name: 'anonymous'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }]; };
    'RegisterCustomTeamInput': { kind: 'INPUT_OBJECT'; name: 'RegisterCustomTeamInput'; isOneOf: false; inputFields: [{ name: 'customFields'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'PropertyValueInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'fromExistingTeamId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'members'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'CustomTeamMemberInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'TournamentTeamStatus'; ofType: null; }; }; defaultValue: null }, { name: 'tag'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'RegisterCustomTeamsInput': { kind: 'INPUT_OBJECT'; name: 'RegisterCustomTeamsInput'; isOneOf: false; inputFields: [{ name: 'customTeams'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'RegisterCustomTeamInput'; ofType: null; }; }; }; }; defaultValue: null }]; };
    'RegisterTournamentTeamInput': { kind: 'INPUT_OBJECT'; name: 'RegisterTournamentTeamInput'; isOneOf: false; inputFields: [{ name: 'customFields'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'PropertyValueInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'fromExistingTeamId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'tag'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'RegistrationConditions': { kind: 'OBJECT'; name: 'RegistrationConditions'; fields: { 'memberConditions': { name: 'memberConditions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PlayerCondition'; ofType: null; }; }; }; } }; 'teamConditions': { name: 'teamConditions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TeamCondition'; ofType: null; }; }; }; } }; }; };
    'RegistrationConditionsInput': { kind: 'INPUT_OBJECT'; name: 'RegistrationConditionsInput'; isOneOf: false; inputFields: [{ name: 'memberConditions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'PlayerConditionInput'; ofType: null; }; }; }; }; defaultValue: null }, { name: 'teamConditions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'TeamConditionInput'; ofType: null; }; }; }; }; defaultValue: null }]; };
    'ResponsePageInfo': { kind: 'OBJECT'; name: 'ResponsePageInfo'; fields: { 'endCursor': { name: 'endCursor'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'hasNextPage': { name: 'hasNextPage'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'hasPreviousPage': { name: 'hasPreviousPage'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'startCursor': { name: 'startCursor'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'RoundConfiguration': { kind: 'OBJECT'; name: 'RoundConfiguration'; fields: { 'game': { name: 'game'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'GameConfiguration'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'order': { name: 'order'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; } }; }; };
    'RoundConfigurationInput': { kind: 'INPUT_OBJECT'; name: 'RoundConfigurationInput'; isOneOf: false; inputFields: [{ name: 'game'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'GameConfigurationInput'; ofType: null; }; }; defaultValue: null }, { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'order'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; }; defaultValue: null }]; };
    'SeedingInput': { kind: 'INPUT_OBJECT'; name: 'SeedingInput'; isOneOf: false; inputFields: [{ name: 'automaticSeeding'; type: { kind: 'INPUT_OBJECT'; name: 'AutomaticSeedingInput'; ofType: null; }; defaultValue: null }, { name: 'manualSeeding'; type: { kind: 'INPUT_OBJECT'; name: 'ManualSeedingInput'; ofType: null; }; defaultValue: null }]; };
    'SeedingMechanism': { name: 'SeedingMechanism'; enumValues: 'HALF_SHIFT' | 'NONE' | 'PAIR_FLIP' | 'REVERSE' | 'REVERSE_HALF_SHIFT'; };
    'SetOrganizationAttachedAppInput': { kind: 'INPUT_OBJECT'; name: 'SetOrganizationAttachedAppInput'; isOneOf: false; inputFields: [{ name: 'appId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'groupId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'permissions'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'GroupPermissionInput'; ofType: null; }; }; }; defaultValue: null }]; };
    'SetOrganizationMembershipInput': { kind: 'INPUT_OBJECT'; name: 'SetOrganizationMembershipInput'; isOneOf: false; inputFields: [{ name: 'email'; type: { kind: 'SCALAR'; name: 'EmailAddress'; ofType: null; }; defaultValue: null }, { name: 'groupId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'permissions'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'GroupPermissionInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'userId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }]; };
    'SkillRatingConfiguration': { kind: 'OBJECT'; name: 'SkillRatingConfiguration'; fields: { 'updateLeaderboardId': { name: 'updateLeaderboardId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; }; };
    'SkillRatingConfigurationInput': { kind: 'INPUT_OBJECT'; name: 'SkillRatingConfigurationInput'; isOneOf: false; inputFields: [{ name: 'updateLeaderboardId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }]; };
    'SkillRatingType': { name: 'SkillRatingType'; enumValues: 'BRADLEY_TERRY_PART' | 'BREDLEY_TERRY_FULL' | 'PLACKETT_LUCE' | 'THURSTONE_MOSTELLER_FULL' | 'THURSTONE_MOSTELLER_PART'; };
    'StepConfiguration': { kind: 'OBJECT'; name: 'StepConfiguration'; fields: { 'groups': { name: 'groups'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'GroupConfiguration'; ofType: null; }; }; }; } }; 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ConfigurationType'; ofType: null; }; } }; }; };
    'StepConfigurationInput': { kind: 'INPUT_OBJECT'; name: 'StepConfigurationInput'; isOneOf: false; inputFields: [{ name: 'groups'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'GroupConfigurationInput'; ofType: null; }; }; }; }; defaultValue: null }, { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ConfigurationType'; ofType: null; }; }; defaultValue: "STEP" }]; };
    'StepStatus': { name: 'StepStatus'; enumValues: 'CONFIGURED' | 'ENDED' | 'GENERATED' | 'GENERATING' | 'SEEDED' | 'SEEDING' | 'STARTED'; };
    'StepType': { name: 'StepType'; enumValues: 'CUSTOM' | 'DOUBLE_ELIM' | 'ROUND_ROBIN' | 'SCORE' | 'SINGLE_ELIM'; };
    'String': unknown;
    'StringCondition': { kind: 'OBJECT'; name: 'StringCondition'; fields: { 'conditionType': { name: 'conditionType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'StringConditionType'; ofType: null; }; } }; 'value': { name: 'value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'StringConditionInput': { kind: 'INPUT_OBJECT'; name: 'StringConditionInput'; isOneOf: false; inputFields: [{ name: 'conditionType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'StringConditionType'; ofType: null; }; }; defaultValue: null }, { name: 'value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'StringConditionType': { name: 'StringConditionType'; enumValues: 'EQ' | 'NEQ'; };
    'SubscriptionItem': { kind: 'OBJECT'; name: 'SubscriptionItem'; fields: { 'description': { name: 'description'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'limitsOverride': { name: 'limitsOverride'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'LimitOverride'; ofType: null; }; }; }; } }; 'maxCount': { name: 'maxCount'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'price': { name: 'price'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; } }; }; };
    'TeamCondition': { kind: 'OBJECT'; name: 'TeamCondition'; fields: { 'errorMessage': { name: 'errorMessage'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'numericCondition': { name: 'numericCondition'; type: { kind: 'OBJECT'; name: 'TeamNumericCondition'; ofType: null; } }; 'property': { name: 'property'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'propertyCondition': { name: 'propertyCondition'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'PropertyCondition'; ofType: null; }; } }; 'stringCondition': { name: 'stringCondition'; type: { kind: 'OBJECT'; name: 'StringCondition'; ofType: null; } }; }; };
    'TeamConditionInput': { kind: 'INPUT_OBJECT'; name: 'TeamConditionInput'; isOneOf: false; inputFields: [{ name: 'errorMessage'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'numericCondition'; type: { kind: 'INPUT_OBJECT'; name: 'TeamNumericConditionInput'; ofType: null; }; defaultValue: null }, { name: 'property'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'propertyCondition'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'PropertyCondition'; ofType: null; }; }; defaultValue: null }, { name: 'stringCondition'; type: { kind: 'INPUT_OBJECT'; name: 'StringConditionInput'; ofType: null; }; defaultValue: null }]; };
    'TeamMembers': { kind: 'OBJECT'; name: 'TeamMembers'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TournamentTeamMemberEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TournamentTeamMemberDto'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ResponsePageInfo'; ofType: null; }; } }; 'totalCount': { name: 'totalCount'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; }; };
    'TeamNumericCondition': { kind: 'OBJECT'; name: 'TeamNumericCondition'; fields: { 'aggregationType': { name: 'aggregationType'; type: { kind: 'ENUM'; name: 'AggregationType'; ofType: null; } }; 'conditionType': { name: 'conditionType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'NumberConditionType'; ofType: null; }; } }; 'propertySource': { name: 'propertySource'; type: { kind: 'ENUM'; name: 'PlayerConditionDataSource'; ofType: null; } }; 'propertySourceId': { name: 'propertySourceId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'value': { name: 'value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; } }; }; };
    'TeamNumericConditionInput': { kind: 'INPUT_OBJECT'; name: 'TeamNumericConditionInput'; isOneOf: false; inputFields: [{ name: 'aggregationType'; type: { kind: 'ENUM'; name: 'AggregationType'; ofType: null; }; defaultValue: null }, { name: 'conditionType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'NumberConditionType'; ofType: null; }; }; defaultValue: null }, { name: 'propertySource'; type: { kind: 'ENUM'; name: 'PlayerConditionDataSource'; ofType: null; }; defaultValue: null }, { name: 'propertySourceId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; }; defaultValue: null }]; };
    'TeamStatusAfterRegistration': { name: 'TeamStatusAfterRegistration'; enumValues: 'AWAITING_FOR_PAYMENT' | 'AWAITING_FOR_PRESENCE_CONFIRMATION' | 'REGISTERED'; };
    'Tournament': { kind: 'OBJECT'; name: 'Tournament'; fields: { 'configuration': { name: 'configuration'; type: { kind: 'OBJECT'; name: 'TournamentConfiguration'; ofType: null; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'createdBy': { name: 'createdBy'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Account'; ofType: null; }; } }; 'createdById': { name: 'createdById'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'description': { name: 'description'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'endAt': { name: 'endAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'endRegistrationsAt': { name: 'endRegistrationsAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'myTeam': { name: 'myTeam'; type: { kind: 'OBJECT'; name: 'TournamentTeam'; ofType: null; } }; 'organizationId': { name: 'organizationId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'startAt': { name: 'startAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'startRegistrationsAt': { name: 'startRegistrationsAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'steps': { name: 'steps'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TournamentStep'; ofType: null; }; }; }; } }; 'teamScores': { name: 'teamScores'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TournamentTeamScore'; ofType: null; }; }; }; } }; 'teams': { name: 'teams'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TournamentTeams'; ofType: null; }; } }; 'title': { name: 'title'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'tournamentSeriesId': { name: 'tournamentSeriesId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'visibleAt': { name: 'visibleAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; }; };
    'TournamentAdmin': { kind: 'OBJECT'; name: 'TournamentAdmin'; fields: { 'account': { name: 'account'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Account'; ofType: null; }; } }; 'accountId': { name: 'accountId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'permissions': { name: 'permissions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'TournamentAdminPermissions'; ofType: null; }; }; }; } }; 'tournamentId': { name: 'tournamentId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; }; };
    'TournamentAdminDeleteInput': { kind: 'INPUT_OBJECT'; name: 'TournamentAdminDeleteInput'; isOneOf: false; inputFields: [{ name: 'accountId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'tournamentId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }]; };
    'TournamentAdminPermissions': { name: 'TournamentAdminPermissions'; enumValues: 'MANAGE_PERMISSIONS' | 'MANAGE_SCORES' | 'MANAGE_TEAMS' | 'MANAGE_TOURNAMENT'; };
    'TournamentAdminUpsertInput': { kind: 'INPUT_OBJECT'; name: 'TournamentAdminUpsertInput'; isOneOf: false; inputFields: [{ name: 'accountId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'permissions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'TournamentAdminPermissions'; ofType: null; }; }; }; }; defaultValue: null }, { name: 'tournamentId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }]; };
    'TournamentConfiguration': { kind: 'OBJECT'; name: 'TournamentConfiguration'; fields: { 'customFields': { name: 'customFields'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Property'; ofType: null; }; }; } }; 'registrationConditions': { name: 'registrationConditions'; type: { kind: 'OBJECT'; name: 'RegistrationConditions'; ofType: null; } }; 'teamMaxSize': { name: 'teamMaxSize'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'teamMinSize': { name: 'teamMinSize'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'teamStatusAfterRegistration': { name: 'teamStatusAfterRegistration'; type: { kind: 'ENUM'; name: 'TeamStatusAfterRegistration'; ofType: null; } }; 'teamsCount': { name: 'teamsCount'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ConfigurationType'; ofType: null; }; } }; }; };
    'TournamentConfigurationInput': { kind: 'INPUT_OBJECT'; name: 'TournamentConfigurationInput'; isOneOf: false; inputFields: [{ name: 'customFields'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'PropertyInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'registrationConditions'; type: { kind: 'INPUT_OBJECT'; name: 'RegistrationConditionsInput'; ofType: null; }; defaultValue: null }, { name: 'teamMaxSize'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; defaultValue: null }, { name: 'teamMinSize'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; defaultValue: null }, { name: 'teamStatusAfterRegistration'; type: { kind: 'ENUM'; name: 'TeamStatusAfterRegistration'; ofType: null; }; defaultValue: null }, { name: 'teamsCount'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; defaultValue: null }, { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ConfigurationType'; ofType: null; }; }; defaultValue: "TOURNAMENT" }]; };
    'TournamentEdge': { kind: 'OBJECT'; name: 'TournamentEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Tournament'; ofType: null; }; }; }; } }; }; };
    'TournamentGameStatus': { name: 'TournamentGameStatus'; enumValues: 'ENDED' | 'STARTED' | 'WAITING'; };
    'TournamentStep': { kind: 'OBJECT'; name: 'TournamentStep'; fields: { 'configuration': { name: 'configuration'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'StepConfiguration'; ofType: null; }; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'description': { name: 'description'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'order': { name: 'order'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'StepStatus'; ofType: null; }; } }; 'teamScores': { name: 'teamScores'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TournamentTeamScore'; ofType: null; }; }; }; } }; 'tournament': { name: 'tournament'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Tournament'; ofType: null; }; } }; 'tournamentId': { name: 'tournamentId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'StepType'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; }; };
    'TournamentStepGroup': { kind: 'OBJECT'; name: 'TournamentStepGroup'; fields: { 'configuration': { name: 'configuration'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'GroupConfiguration'; ofType: null; }; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'description': { name: 'description'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'rounds': { name: 'rounds'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TournamentStepGroupRound'; ofType: null; }; }; }; } }; 'tournamentStepId': { name: 'tournamentStepId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; }; };
    'TournamentStepGroupRound': { kind: 'OBJECT'; name: 'TournamentStepGroupRound'; fields: { 'configuration': { name: 'configuration'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'RoundConfiguration'; ofType: null; }; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'games': { name: 'games'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TournamentStepGroupRoundGame'; ofType: null; }; }; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'order': { name: 'order'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; } }; 'tournamentStepGroupId': { name: 'tournamentStepGroupId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; }; };
    'TournamentStepGroupRoundGame': { kind: 'OBJECT'; name: 'TournamentStepGroupRoundGame'; fields: { 'configuration': { name: 'configuration'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'GameConfiguration'; ofType: null; }; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'losingGameId': { name: 'losingGameId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'matches': { name: 'matches'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TournamentStepGroupRoundGameMatch'; ofType: null; }; }; }; } }; 'order': { name: 'order'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'TournamentGameStatus'; ofType: null; }; } }; 'tournamentStepGroupRoundId': { name: 'tournamentStepGroupRoundId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'winningGameId': { name: 'winningGameId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; }; };
    'TournamentStepGroupRoundGameMatch': { kind: 'OBJECT'; name: 'TournamentStepGroupRoundGameMatch'; fields: { 'configuration': { name: 'configuration'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MatchConfiguration'; ofType: null; }; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'order': { name: 'order'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'MatchStatus'; ofType: null; }; } }; 'tournamentStepGroupRoundGameId': { name: 'tournamentStepGroupRoundGameId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; }; };
    'TournamentStepGroupRoundGameMatchEdge': { kind: 'OBJECT'; name: 'TournamentStepGroupRoundGameMatchEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TournamentStepGroupRoundGameMatch'; ofType: null; }; }; }; } }; }; };
    'TournamentStepGroupRoundGameMatchScore': { kind: 'OBJECT'; name: 'TournamentStepGroupRoundGameMatchScore'; fields: { 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'matchId': { name: 'matchId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'score': { name: 'score'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'MatchScoreStatus'; ofType: null; }; } }; 'teamId': { name: 'teamId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; }; };
    'TournamentStepGroupRoundGameMatchScoreEdge': { kind: 'OBJECT'; name: 'TournamentStepGroupRoundGameMatchScoreEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TournamentStepGroupRoundGameMatchScore'; ofType: null; }; }; }; } }; }; };
    'TournamentStepGroupRoundGameMatchScores': { kind: 'OBJECT'; name: 'TournamentStepGroupRoundGameMatchScores'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TournamentStepGroupRoundGameMatchScoreEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TournamentStepGroupRoundGameMatchScore'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ResponsePageInfo'; ofType: null; }; } }; 'totalCount': { name: 'totalCount'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; }; };
    'TournamentStepGroupRoundGameMatches': { kind: 'OBJECT'; name: 'TournamentStepGroupRoundGameMatches'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TournamentStepGroupRoundGameMatchEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TournamentStepGroupRoundGameMatch'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ResponsePageInfo'; ofType: null; }; } }; 'totalCount': { name: 'totalCount'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; }; };
    'TournamentTeam': { kind: 'OBJECT'; name: 'TournamentTeam'; fields: { 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'customFields': { name: 'customFields'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PropertyConfigWithValue'; ofType: null; }; }; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'managerId': { name: 'managerId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'members': { name: 'members'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TournamentTeamMemberDto'; ofType: null; }; }; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'TournamentTeamStatus'; ofType: null; }; } }; 'tag': { name: 'tag'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'teamId': { name: 'teamId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'tournament': { name: 'tournament'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Tournament'; ofType: null; }; } }; 'tournamentId': { name: 'tournamentId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; }; };
    'TournamentTeamEdge': { kind: 'OBJECT'; name: 'TournamentTeamEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TournamentTeam'; ofType: null; }; }; }; } }; }; };
    'TournamentTeamMemberDto': { kind: 'OBJECT'; name: 'TournamentTeamMemberDto'; fields: { 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'playerProfileId': { name: 'playerProfileId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'TournamentTeamMemberStatus'; ofType: null; }; } }; 'team': { name: 'team'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TournamentTeam'; ofType: null; }; } }; 'tournamentTeamId': { name: 'tournamentTeamId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; }; };
    'TournamentTeamMemberEdge': { kind: 'OBJECT'; name: 'TournamentTeamMemberEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TournamentTeamMemberDto'; ofType: null; }; }; }; } }; }; };
    'TournamentTeamMemberStatus': { name: 'TournamentTeamMemberStatus'; enumValues: 'ACCEPTED' | 'AWAITING' | 'DENIED'; };
    'TournamentTeamScore': { kind: 'OBJECT'; name: 'TournamentTeamScore'; fields: { 'score': { name: 'score'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; } }; 'team': { name: 'team'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TournamentTeam'; ofType: null; }; } }; 'teamId': { name: 'teamId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; }; };
    'TournamentTeamStatus': { name: 'TournamentTeamStatus'; enumValues: 'AWAITING_FOR_PAYMENT' | 'AWAITING_FOR_PRESENCE_CONFIRMATION' | 'CONFIRMED' | 'DENIED' | 'NOT_ATTENDING' | 'NOT_VALID' | 'REGISTERED'; };
    'TournamentTeams': { kind: 'OBJECT'; name: 'TournamentTeams'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TournamentTeamEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TournamentTeam'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ResponsePageInfo'; ofType: null; }; } }; 'totalCount': { name: 'totalCount'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; }; };
    'Tournaments': { kind: 'OBJECT'; name: 'Tournaments'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TournamentEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Tournament'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ResponsePageInfo'; ofType: null; }; } }; 'totalCount': { name: 'totalCount'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; }; };
    'TournamentsQuery': { kind: 'INPUT_OBJECT'; name: 'TournamentsQuery'; isOneOf: false; inputFields: [{ name: 'orderBy'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'TournamentsQueryOrderBy'; ofType: null; }; }; defaultValue: "START_AT" }, { name: 'orderDirection'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'OrderDirection'; ofType: null; }; }; defaultValue: "ASC" }, { name: 'showNotVisible'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'TournamentsQueryStatus'; ofType: null; }; }; defaultValue: "ALL" }]; };
    'TournamentsQueryOrderBy': { name: 'TournamentsQueryOrderBy'; enumValues: 'END_AT' | 'REGISTRATIONS_END_AT' | 'REGISTRATIONS_START_AT' | 'START_AT'; };
    'TournamentsQueryStatus': { name: 'TournamentsQueryStatus'; enumValues: 'ALL' | 'ENDED' | 'REGISTRATIONS_CLOSED' | 'REGISTRATIONS_ENDED' | 'REGISTRATIONS_OPEN' | 'STARTED'; };
    'URL': unknown;
    'UpdateLeaderboardInput': { kind: 'INPUT_OBJECT'; name: 'UpdateLeaderboardInput'; isOneOf: false; inputFields: [{ name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'UpdateLeaderboardSeasonBucketInput': { kind: 'INPUT_OBJECT'; name: 'UpdateLeaderboardSeasonBucketInput'; isOneOf: false; inputFields: [{ name: 'minScore'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'scoreCalculationType'; type: { kind: 'ENUM'; name: 'LeaderboardScoreCalculationType'; ofType: null; }; defaultValue: null }]; };
    'UpdateLeaderboardSeasonInput': { kind: 'INPUT_OBJECT'; name: 'UpdateLeaderboardSeasonInput'; isOneOf: false; inputFields: [{ name: 'end'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'start'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; defaultValue: null }, { name: 'startingScore'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; defaultValue: null }]; };
    'UpdateMatchScoreInput': { kind: 'INPUT_OBJECT'; name: 'UpdateMatchScoreInput'; isOneOf: false; inputFields: [{ name: 'forcedScoreValue'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; defaultValue: null }, { name: 'status'; type: { kind: 'ENUM'; name: 'MatchScoreStatus'; ofType: null; }; defaultValue: null }, { name: 'teamId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'variables'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'UpdateTournamentMatchScoreVariablesInput'; ofType: null; }; }; }; defaultValue: null }]; };
    'UpdateMePlayerInput': { kind: 'INPUT_OBJECT'; name: 'UpdateMePlayerInput'; isOneOf: false; inputFields: [{ name: 'customFields'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'PlayerCustomFieldInput'; ofType: null; }; }; }; }; defaultValue: null }, { name: 'description'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'profilePicUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'username'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'UpdateOrganizationAppInput': { kind: 'INPUT_OBJECT'; name: 'UpdateOrganizationAppInput'; isOneOf: false; inputFields: [{ name: 'consentUrl'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'loginUrl'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'logoutRedirectUrls'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'redirectUrls'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; }; defaultValue: null }, { name: 'requiresConsent'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; }; defaultValue: null }, { name: 'secret'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'UpdateOrganizationIdentityProvider': { kind: 'INPUT_OBJECT'; name: 'UpdateOrganizationIdentityProvider'; isOneOf: false; inputFields: [{ name: 'allowLogin'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; }; defaultValue: null }, { name: 'description'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'icon'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'oauth2Configuration'; type: { kind: 'INPUT_OBJECT'; name: 'OAuthClientConfigurationInput'; ofType: null; }; defaultValue: null }, { name: 'openidConfiguration'; type: { kind: 'INPUT_OBJECT'; name: 'OpenidConfigurationInput'; ofType: null; }; defaultValue: null }]; };
    'UpdateOrganizationInput': { kind: 'INPUT_OBJECT'; name: 'UpdateOrganizationInput'; isOneOf: false; inputFields: [{ name: 'configuration'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'OrganizationConfigurationInput'; ofType: null; }; }; defaultValue: null }, { name: 'description'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'UpdatePlatformInput': { kind: 'INPUT_OBJECT'; name: 'UpdatePlatformInput'; isOneOf: false; inputFields: [{ name: 'configuration'; type: { kind: 'INPUT_OBJECT'; name: 'PlatformConfigurationInput'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'UpdatePlayerInput': { kind: 'INPUT_OBJECT'; name: 'UpdatePlayerInput'; isOneOf: false; inputFields: [{ name: 'customFields'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'PlayerCustomFieldInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'organizationCustomId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'ownerId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'profilePicUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'username'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'UpdateTournamentConfigurationInput': { kind: 'INPUT_OBJECT'; name: 'UpdateTournamentConfigurationInput'; isOneOf: false; inputFields: [{ name: 'customFields'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'PropertyInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'registrationConditions'; type: { kind: 'INPUT_OBJECT'; name: 'RegistrationConditionsInput'; ofType: null; }; defaultValue: null }, { name: 'teamMaxSize'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; defaultValue: null }, { name: 'teamMinSize'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; defaultValue: null }, { name: 'teamStatusAfterRegistration'; type: { kind: 'ENUM'; name: 'TeamStatusAfterRegistration'; ofType: null; }; defaultValue: null }, { name: 'teamsCount'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; defaultValue: null }, { name: 'type'; type: { kind: 'ENUM'; name: 'ConfigurationType'; ofType: null; }; defaultValue: "TOURNAMENT" }]; };
    'UpdateTournamentConfigurationOrImportFromIdInput': { kind: 'INPUT_OBJECT'; name: 'UpdateTournamentConfigurationOrImportFromIdInput'; isOneOf: false; inputFields: [{ name: 'configuration'; type: { kind: 'INPUT_OBJECT'; name: 'UpdateTournamentConfigurationInput'; ofType: null; }; defaultValue: null }, { name: 'fromId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }]; };
    'UpdateTournamentInput': { kind: 'INPUT_OBJECT'; name: 'UpdateTournamentInput'; isOneOf: false; inputFields: [{ name: 'configuration'; type: { kind: 'INPUT_OBJECT'; name: 'UpdateTournamentConfigurationOrImportFromIdInput'; ofType: null; }; defaultValue: null }, { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'endAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; defaultValue: null }, { name: 'endRegistrationsAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; defaultValue: null }, { name: 'startAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; defaultValue: null }, { name: 'startRegistrationsAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; defaultValue: null }, { name: 'title'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'visibleAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; defaultValue: null }]; };
    'UpdateTournamentMatchScoreVariablesInput': { kind: 'INPUT_OBJECT'; name: 'UpdateTournamentMatchScoreVariablesInput'; isOneOf: false; inputFields: [{ name: 'formulaName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; }; defaultValue: null }]; };
    'UpdateTournamentTeamInput': { kind: 'INPUT_OBJECT'; name: 'UpdateTournamentTeamInput'; isOneOf: false; inputFields: [{ name: 'customFields'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'PropertyValueInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'tag'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'UpdateWebhookInput': { kind: 'INPUT_OBJECT'; name: 'UpdateWebhookInput'; isOneOf: false; inputFields: [{ name: 'active'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'events'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'WebhookEventType'; ofType: null; }; }; }; defaultValue: null }, { name: 'url'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'Variable': { kind: 'OBJECT'; name: 'Variable'; fields: { 'defaultValue': { name: 'defaultValue'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'VariableInput': { kind: 'INPUT_OBJECT'; name: 'VariableInput'; isOneOf: false; inputFields: [{ name: 'defaultValue'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; }; defaultValue: null }, { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'Void': unknown;
    'Webhook': { kind: 'OBJECT'; name: 'Webhook'; fields: { 'active': { name: 'active'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'description': { name: 'description'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'events': { name: 'events'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'WebhookEventType'; ofType: null; }; }; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'organizationId': { name: 'organizationId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'secret': { name: 'secret'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'url': { name: 'url'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'WebhookEventConfiguration': { kind: 'OBJECT'; name: 'WebhookEventConfiguration'; fields: { 'answerPayload': { name: 'answerPayload'; type: { kind: 'OBJECT'; name: 'WebhookEventConfigurationProperties'; ofType: null; } }; 'description': { name: 'description'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'payload': { name: 'payload'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'WebhookEventConfigurationProperties'; ofType: null; }; } }; 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'WebhookEventType'; ofType: null; }; } }; }; };
    'WebhookEventConfigurationProperties': { kind: 'OBJECT'; name: 'WebhookEventConfigurationProperties'; fields: { 'array': { name: 'array'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'example': { name: 'example'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'optional': { name: 'optional'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'properties': { name: 'properties'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'WebhookEventConfigurationProperties'; ofType: null; }; }; } }; 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'WebhookEventType': { name: 'WebhookEventType'; enumValues: 'TOURNAMENT_TEAM_ATTENDANCE_UPDATED' | 'TOURNAMENT_TEAM_CONFIRMATION_UPDATED' | 'TOURNAMENT_TEAM_DELETED' | 'TOURNAMENT_TEAM_DELETED_ADMIN' | 'TOURNAMENT_TEAM_STATUS_UPDATED'; };
  };
};

import * as gqlTada from 'gql.tada';

declare module 'gql.tada' {
  interface setupSchema {
    introspection: introspection
  }
}